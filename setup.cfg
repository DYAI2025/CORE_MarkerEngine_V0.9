[metadata]
name = marker-engine
version = 1.0.0
description = Deterministic conversation analysis engine with marker detection and scoring
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/your-org/marker-engine
author = Marker Engine Team
author_email = info@marker-engine.dev
license = MIT
license_files = LICENSE
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Programming Language :: Python :: 3.13
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Topic :: Text Processing :: Linguistic
keywords = nlp, conversation-analysis, marker-detection, scoring, drift-analysis
project_urls =
    Documentation = https://marker-engine.readthedocs.io/
    Source = https://github.com/your-org/marker-engine
    Tracker = https://github.com/your-org/marker-engine/issues

[options]
package_dir =
    = .
packages = find:
python_requires = >=3.9
include_package_data = True
zip_safe = False

[options.packages.find]
where = .
exclude =
    tests
    docs

[options.entry_points]
console_scripts =
    marker-engine = api_service:main

[options.extras_require]
dev =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    black>=23.0.0
    isort>=5.12.0
    mypy>=1.0.0
    flake8>=6.0.0
    pre-commit>=3.0.0
    tox>=4.0.0
docs =
    sphinx>=5.0.0
    sphinx-rtd-theme>=1.2.0

[flake8]
max-line-length = 100
max-complexity = 10
exclude =
    .git,
    __pycache__,
    .pytest_cache,
    .mypy_cache,
    htmlcov,
    .tox,
    .env,
    build,
    dist,
    *.egg-info
ignore =
    E203,  # whitespace before ':'
    E501,  # line too long (handled by black)
    W503,  # line break before binary operator

[isort]
profile = black
line_length = 100
known_first_party = marker_engine
multi_line_output = 3

[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts =
    --verbose
    --tb=short
    --cov=marker_engine
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-fail-under=80

[mypy]
python_version = 3.9
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[coverage:run]
source = marker_engine
omit =
    */tests/*
    */test_*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
